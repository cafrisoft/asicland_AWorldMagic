#include "TextEditorManager.h"

#include <QStringList>
#include <QList>



TextEditorManager::TextEditorManager()
{

}

QList<QStringList> TextEditorManager::syntaxChecker(QString fileExtension)
{
    if (fileExtension == "txt")
    {
        QList<QStringList> syntax_txt = {
            {"", "", "#ffffff"}
        };

        return syntax_txt;
    }

    else if (fileExtension == "v" || fileExtension == "vh" || fileExtension == "sv")
    {
        QList<QStringList> syntax_rtl = {
            {"\"", "\"", "#F0A962"},
            {"//", "\n", "#006400"},
            {"/*", "*/", "#006400"},
            {"`", "", "#8A2BE2"},
            {"`default_discipline", "", "#8A2BE2"},
            {"`default_transition", "", "#8A2BE2"},
            {"`define", "", "#8A2BE2"},
            {"`else", "", "#8A2BE2"},
            {"`endif", "", "#8A2BE2"},
            {"`ifdef", "", "#8A2BE2"},
            {"`ifndef", "", "#8A2BE2"},
            {"`include", "", "#8A2BE2"},
            {"`resetall", "", "#8A2BE2"},
            {"`timescale", "", "#8A2BE2"},
            {"`undef", "", "#8A2BE2"},
            {"above", "", "#0069D1"},
            {"abs", "", "#0069D1"},
            {"absdelay", "", "#0069D1"},
            {"ac_stim", "", "#0069D1"},
            {"acos", "", "#0069D1"},
            {"acosh", "", "#0069D1"},
            {"always", "", "#0069D1"},
            {"analog", "", "#0069D1"},
            {"analysis", "", "#0069D1"},
            {"and", "", "#0069D1"},
            {"asin", "", "#0069D1"},
            {"asinh", "", "#0069D1"},
            {"assign", "", "#0069D1"},
            {"atan", "", "#0069D1"},
            {"atan2", "", "#0069D1"},
            {"atanh", "", "#0069D1"},
            {"begin", "", "#EC5EB9"},
            {"branch", "", "#0069D1"},
            {"buf", "", "#0069D1"},
            {"bufif0", "", "#0069D1"},
            {"bufif1", "", "#0069D1"},
            {"case", "", "#FFFF00"},
            {"casex", "", "#FFFF00"},
            {"casez", "", "#FFFF00"},
            {"ceil", "", "#0069D1"},
            {"cmos", "", "#0069D1"},
            {"connectrules", "", "#FFFF00"},
            {"cos", "", "#0069D1"},
            {"cosh", "", "#0069D1"},
            {"cross", "", "#0069D1"},
            {"ddt", "", "#0069D1"},
            {"deassign", "", "#0069D1"},
            {"default", "", "#0069D1"},
            {"defparam", "", "#0069D1"},
            {"disable", "", "#0069D1"},
            {"discipline", "", "#FFFF00"},
            {"driver_update", "", "#0069D1"},
            {"edge", "", "#0069D1"},
            {"else", "", "#0069D1"},
            {"end", "", "#EC5EB9"},
            {"endcase", "", "#FFFF00"},
            {"above", "", "#0069D1"},
            {"abs", "", "#0069D1"},
            {"absdelay", "", "#0069D1"},
            {"ac_stim", "", "#0069D1"},
            {"acos", "", "#0069D1"},
            {"acosh", "", "#0069D1"},
            {"always", "", "#0069D1"},
            {"analog", "", "#0069D1"},
            {"analysis", "", "#0069D1"},
            {"and", "", "#0069D1"},
            {"asin", "", "#0069D1"},
            {"asinh", "", "#0069D1"},
            {"assign", "", "#0069D1"},
            {"atan", "", "#0069D1"},
            {"atan2", "", "#0069D1"},
            {"atanh", "", "#0069D1"},
            {"begin", "", "#EC5EB9"},
            {"branch", "", "#0069D1"},
            {"buf", "", "#0069D1"},
            {"bufif0", "", "#0069D1"},
            {"bufif1", "", "#0069D1"},
            {"case", "", "#FFFF00"},
            {"casex", "", "#FFFF00"},
            {"casez", "", "#FFFF00"},
            {"ceil", "", "#0069D1"},
            {"cmos", "", "#0069D1"},
            {"connectrules", "", "#FFFF00"},
            {"cos", "", "#0069D1"},
            {"cosh", "", "#0069D1"},
            {"cross", "", "#0069D1"},
            {"ddt", "", "#0069D1"},
            {"deassign", "", "#0069D1"},
            {"default", "", "#0069D1"},
            {"defparam", "", "#0069D1"},
            {"disable", "", "#0069D1"},
            {"discipline", "", "#FFFF00"},
            {"driver_update", "", "#0069D1"},
            {"edge", "", "#0069D1"},
            {"else", "", "#0069D1"},
            {"end", "", "#EC5EB9"},
            {"endcase", "", "#FFFF00"},
            {"endconnectrules", "", "#FFFF00"},
            {"enddiscipline", "", "#FFFF00"},
            {"endfunction", "", "#FFFF00"},
            {"endmodule", "", "#FFFF00"},
            {"endnature", "", "#FFFF00"},
            {"endprimitive", "", "#FFFF00"},
            {"endspecify", "", "#FFFF00"},
            {"endtable", "", "#FFFF00"},
            {"endtask", "", "#FFFF00"},
            {"event", "", "#0069D1"},
            {"exclude", "", "#0069D1"},
            {"exp", "", "#0069D1"},
            {"final_step", "", "#0069D1"},
            {"flicker_noise", "", "#0069D1"},
            {"flow", "", "#0069D1"},
            {"for", "", "#0069D1"},
            {"force", "", "#0069D1"},
            {"forever", "", "#0069D1"},
            {"fork", "", "#0069D1"},
            {"form", "", "#0069D1"},
            {"function", "", "#FFFF00"},
            {"generate", "", "#E63E3E"},
            {"genvar", "", "#0069D1"},
            {"ground", "", "#0069D1"},
            {"highz0", "", "#0069D1"},
            {"highz1", "", "#0069D1"},
            {"hypot", "", "#0069D1"},
            {"idt", "", "#0069D1"},
            {"idtmod", "", "#0069D1"},
            {"if", "", "#0069D1"},
            {"ifnone", "", "#0069D1"},
            {"inf", "", "#0069D1"},
            {"initial", "", "#0069D1"},
            {"initial_step", "", "#0069D1"},
            {"inout", "", "#0069D1"},
            {"input", "", "#0069D1"},
            {"integer", "", "#0069D1"},
            {"join", "", "#E63E3E"},
            {"laplace_nd", "", "#0069D1"},
            {"laplace_np", "", "#0069D1"},
            {"laplace_zd", "", "#0069D1"},
            {"laplace_zp", "", "#0069D1"},
            {"large", "", "#0069D1"},
            {"last_crossing", "", "#0069D1"},
            {"limexp", "", "#0069D1"},
            {"ln", "", "#0069D1"},
            {"log", "", "#0069D1"},
            {"macromodule", "", "#0069D1"},
            {"max", "", "#0069D1"},
            {"medium", "", "#0069D1"},
            {"min", "", "#0069D1"},
            {"module", "", "#FFFF00"},
            {"nand", "", "#0069D1"},
            {"nature", "", "#FFFF00"},
            {"negedge", "", "#0069D1"},
            {"net_resolution", "", "#0069D1"},
            {"nmos", "", "#0069D1"},
            {"noise_table", "", "#0069D1"},
            {"nor", "", "#0069D1"},
            {"not", "", "#0069D1"},
            {"notif0", "", "#0069D1"},
            {"notif1", "", "#0069D1"},
            {"or", "", "#0069D1"},
            {"output", "", "#0069D1"},
            {"parameter", "", "#0069D1"},
            {"pmos", "", "#0069D1"},
            {"posedge", "", "#0069D1"},
            {"potential", "", "#0069D1"},
            {"pow", "", "#0069D1"},
            {"primitive", "", "#FFFF00"},
            {"pull0", "", "#0069D1"},
            {"pull1", "", "#0069D1"},
            {"pulldown", "", "#0069D1"},
            {"pullup", "", "#0069D1"},
            {"rcmos", "", "#0069D1"},
            {"real", "", "#0069D1"},
            {"realtime", "", "#0069D1"},
            {"reg", "", "#0069D1"},
            {"release", "", "#0069D1"},
            {"repeat", "", "#0069D1"},
            {"rnmos", "", "#0069D1"},
            {"rpmos", "", "#0069D1"},
            {"rtran", "", "#0069D1"},
            {"rtranif0", "", "#0069D1"},
            {"rtranif1", "", "#0069D1"},
            {"scalared", "", "#0069D1"},
            {"sin", "", "#0069D1"},
            {"sinh", "", "#0069D1"},
            {"slew", "", "#0069D1"},
            {"small", "", "#0069D1"},
            {"specify", "", "#FFFF00"},
            {"specparam", "", "#0069D1"},
            {"sqrt", "", "#0069D1"},
            {"strong0", "", "#0069D1"},
            {"strong1", "", "#0069D1"},
            {"supply0", "", "#0069D1"},
            {"supply1", "", "#0069D1"},
            {"table", "", "#FFFF00"},
            {"tan", "", "#0069D1"},
            {"tanh", "", "#0069D1"},
            {"task", "", "#FFFF00"},
            {"time", "", "#0069D1"},
            {"timer", "", "#0069D1"},
            {"tran", "", "#0069D1"},
            {"tranif0", "", "#0069D1"},
            {"tranif1", "", "#0069D1"},
            {"transition", "", "#0069D1"},
            {"tri", "", "#0069D1"},
            {"tri0", "", "#0069D1"},
            {"tri1", "", "#0069D1"},
            {"triand", "", "#0069D1"},
            {"trior", "", "#0069D1"},
            {"trireg", "", "#0069D1"},
            {"vectored", "", "#0069D1"},
            {"wait", "", "#0069D1"},
            {"wand", "", "#0069D1"},
            {"weak0", "", "#0069D1"},
            {"weak1", "", "#0069D1"},
            {"while", "", "#0069D1"},
            {"white_noise", "", "#0069D1"},
            {"wire", "", "#0069D1"},
            {"wor", "", "#0069D1"},
            {"wreal", "", "#0069D1"},
            {"xnor", "", "#0069D1"},
            {"xor", "", "#0069D1"},
            {"zi_nd", "", "#0069D1"},
            {"zi_np", "", "#0069D1"},
            {"zi_zd", "", "#0069D1"},
            {"zi_zp", "", "#0069D1"}
        };

        return syntax_rtl;
    }

    else if (fileExtension == "c" || fileExtension == "h")
    {
        QList<QStringList> syntax_c = {
            {"\'", "\'", "#F0A962"},
            {"\"", "\"", "#F0A962"},
            {"//", "\n", "#006400"},
            {"/*", "*/", "#006400"},
            {"auto", "", "#0069D1"},
            {"break", "", "#EC5EB9"},
            {"case", "", "#59A5F9"},
            {"char", "", "#0069D1"},
            {"const", "", "#0069D1"},
            {"continue", "", "#0069D1"},
            {"default", "", "#0069D1"},
            {"do", "", "#0069D1"},
            {"double", "", "#0069D1"},
            {"else", "", "#0069D1"},
            {"enum", "", "#0069D1"},
            {"extern", "", "#0069D1"},
            {"float", "", "#0069D1"},
            {"for", "", "#59A5F9"},
            {"goto", "", "#0069D1"},
            {"if", "", "#0069D1"},
            {"include", "", "#EC5EB9"},
            {"int", "", "#0069D1"},
            {"long", "", "#0069D1"},
            {"register", "", "#0069D1"},
            {"return", "", "#EC5EB9"},
            {"short", "", "#0069D1"},
            {"signed", "", "#0069D1"},
            {"sizeof", "", "#0069D1"},
            {"static", "", "#0069D1"},
            {"struct", "", "#0069D1"},
            {"switch", "", "#59A5F9"},
            {"typedef", "", "#0069D1"},
            {"union", "", "#0069D1"},
            {"unsigned", "", "#0069D1"},
            {"void", "", "#0069D1"},
            {"volatile", "", "#0069D1"},
            {"while", "", "#0069D1"}
        };

        return syntax_c;
    }

    else if (fileExtension == "sdc")
    {
        QList<QStringList> syntax_sdc = {
            {"\'", "\'", "#F0A962"},
            {"\"", "\"", "#F0A962"},
            {"#", "\n", "#006400"},
            {"all_cloks", "", "#0069D1"},
            {"all_inputs", "", "#0069D1"},
            {"all_outputs", "", "#0069D1"},
            {"all_registers", "", "#0069D1"},
            {"and", "", "#0069D1"},
            {"apb_input_delay", "", "#0069D1"},
            {"apb_output_delay", "", "#0069D1"},
            {"are", "", "#0069D1"},
            {"asynchronous", "", "#0069D1"},
            {"axi_input_delay", "", "#0069D1"},
            {"axi_output_delay", "", "#0069D1"},
            {"clock", "", "#0069D1"},
            {"Conditions", "", "#0069D1"},
            {"Create", "", "#0069D1"},
            {"create_clock", "", "#0069D1"},
            {"create_generated_clock", "", "#0069D1"},
            {"current_design", "", "#0069D1"},
            {"Cycle", "", "#0069D1"},
            {"Define", "", "#0069D1"},
            {"Delays", "", "#0069D1"},
            {"derive_clock_uncertainty", "", "#0069D1"},
            {"derive_clocks", "", "#0069D1"},
            {"derive_pll_clocks", "", "#0069D1"},
            {"disable_min_pulse_width", "", "#0069D1"},
            {"dma_ack", "", "#0069D1"},
            {"dma_int", "", "#0069D1"},
            {"dma_req", "", "#0069D1"},
            {"Driver", "", "#0069D1"},
            {"driving_cell", "", "#0069D1"},
            {"else", "", "#0069D1"},
            {"enclosed", "", "#0069D1"},
            {"env", "", "#0069D1"},
            {"Exceptions", "", "#0069D1"},
            {"exists", "", "#0069D1"},
            {"expr", "", "#0069D1"},
            {"External", "", "#0069D1"},
            {"from", "", "#0069D1"},
            {"get_active_clocks", "", "#0069D1"},
            {"get_assignment_groups", "", "#0069D1"},
            {"get_cells", "", "#0069D1"},
            {"get_clocks", "", "#0069D1"},
            {"get_fanins", "", "#0069D1"},
            {"get_fanouts", "", "#0069D1"},
            {"get_keepers", "", "#0069D1"},
            {"get_nets", "", "#0069D1"},
            {"get_nodes", "", "#0069D1"},
            {"get_partitions", "", "#0069D1"},
            {"get_pins", "", "#0069D1"},
            {"get_ports", "", "#0069D1"},
            {"get_registers", "", "#0069D1"},
            {"if", "", "#0069D1"},
            {"info", "", "#0069D1"},
            {"Input", "", "#0069D1"},
            {"input_delay_ratio", "", "#0069D1"},
            {"input_ratio", "", "#0069D1"},
            {"internal_ratio", "", "#0069D1"},
            {"lib_cell", "", "#0069D1"},
            {"library", "", "#0069D1"},
            {"list", "", "#0069D1"},
            {"load", "", "#0069D1"},
            {"load_val", "", "#0069D1"},
            {"max", "", "#0069D1"},
            {"max_fanout", "", "#0069D1"},
            {"Mode", "", "#0069D1"},
            {"Models", "", "#0069D1"},
            {"Multi", "", "#0069D1"},
            {"name", "", "#0069D1"},
            {"no_design_rule", "", "#0069D1"},
            {"Operating", "", "#0069D1"},
            {"Output", "", "#0069D1"},
            {"output_delay_ratio", "", "#0069D1"},
            {"Path", "", "#0069D1"},
            {"Paths", "", "#0069D1"},
            {"period", "", "#0069D1"},
            {"pready", "", "#0069D1"},
            {"remove_annotated_delay", "", "#0069D1"},
            {"remove_clock", "", "#0069D1"},
            {"remove_clock_groups", "", "#0069D1"},
            {"remove_clock_latency", "", "#0069D1"},
            {"remove_clock_uncertainty", "", "#0069D1"},
            {"remove_disable_timing", "", "#0069D1"},
            {"remove_input_delay", "", "#0069D1"},
            {"remove_output_delay", "", "#0069D1"},
            {"reset_design", "", "#0069D1"},
            {"reset_timing_drate", "", "#0069D1"},
            {"set", "", "#0069D1"},
            {"set_active_clock", "", "#FCFAB4"},
            {"set_annotated_delay", "", "#FCFAB4"},
            {"set_clock_groups", "", "#FCFAB4"},
            {"set_clock_latency", "", "#FCFAB4"},
            {"set_clock_transition", "", "#FCFAB4"},
            {"set_clock_uncertainty", "", "#FCFAB4"},
            {"set_data_delay", "", "#FCFAB4"},
            {"set_disable_timing", "", "#FCFAB4"},
            {"set_driving_cell", "", "#FCFAB4"},
            {"set_false_path", "", "#FCFAB4"},
            {"set_input_delay", "", "#FCFAB4"},
            {"set_input_transition", "", "#FCFAB4"},
            {"set_load", "", "#FCFAB4"},
            {"set_max_delay", "", "#FCFAB4"},
            {"set_max_fanout", "", "#FCFAB4"},
            {"set_max_skew", "", "#FCFAB4"},
            {"set_max_time_borrow", "", "#FCFAB4"},
            {"set_min_delay", "", "#FCFAB4"},
            {"set_multicycle_path", "", "#FCFAB4"},
            {"set_net_delay", "", "#FCFAB4"},
            {"set_operating_conditions", "", "#FCFAB4"},
            {"set_output_delay", "", "#FCFAB4"},
            {"set_scc_mode", "", "#FCFAB4"},
            {"set_time_format", "", "#FCFAB4"},
            {"set_timing_derate", "", "#FCFAB4"},
            {"set_wire_load_mode", "", "#FCFAB4"},
            {"setup", "", "#0069D1"},
            {"Skew", "", "#0069D1"},
            {"Specify", "", "#0069D1"},
            {"the", "", "#0069D1"},
            {"Timing", "", "#0069D1"},
            {"to", "", "#0069D1"},
            {"Transition", "", "#0069D1"},
            {"waveform", "", "#0069D1"},
            {"Wire", "", "#0069D1"}
        };

        return syntax_sdc;
    }

    else if (fileExtension == "tcl")
    {
        QList<QStringList> syntax_tcl = {
            {"\'", "\'", "#F0A962"},
            {"\"", "\"", "#F0A962"},
            {"#", "\n", "#006400"},
            {"after", "", "#0069D1"},
            {"append", "", "#0069D1"},
            {"apply", "", "#0069D1"},
            {"array", "", "#0069D1"},
            {"auto_execok", "", "#0069D1"},
            {"auto_import", "", "#0069D1"},
            {"auto_load", "", "#0069D1"},
            {"auto_mkindex", "", "#0069D1"},
            {"auto_mkindex_old", "", "#0069D1"},
            {"auto_qualify", "", "#0069D1"},
            {"auto_reset", "", "#0069D1"},
            {"bgerror", "", "#0069D1"},
            {"binary", "", "#0069D1"},
            {"break", "", "#EC5EB9"},
            {"catch", "", "#0069D1"},
            {"cd", "", "#0069D1"},
            {"chan", "", "#0069D1"},
            {"clock", "", "#0069D1"},
            {"close", "", "#0069D1"},
            {"concat", "", "#0069D1"},
            {"continue", "", "#0069D1"},
            {"dde", "", "#0069D1"},
            {"dict", "", "#0069D1"},
            {"encoding", "", "#0069D1"},
            {"eof", "", "#0069D1"},
            {"error", "", "#0069D1"},
            {"eval", "", "#0069D1"},
            {"exec", "", "#0069D1"},
            {"exit", "", "#EC5EB9"},
            {"expr", "", "#0069D1"},
            {"fblocked", "", "#0069D1"},
            {"fconfigure", "", "#0069D1"},
            {"fcopy", "", "#0069D1"},
            {"file", "", "#0069D1"},
            {"fileevent", "", "#0069D1"},
            {"filename", "", "#0069D1"},
            {"flush", "", "#0069D1"},
            {"for", "", "#0069D1"},
            {"foreach", "", "#0069D1"},
            {"format", "", "#0069D1"},
            {"gets", "", "#0069D1"},
            {"glob", "", "#0069D1"},
            {"global", "", "#0069D1"},
            {"history", "", "#0069D1"},
            {"http", "", "#0069D1"},
            {"if", "", "#0069D1"},
            {"incr", "", "#0069D1"},
            {"info", "", "#0069D1"},
            {"interp", "", "#0069D1"},
            {"join", "", "#0069D1"},
            {"lappend", "", "#0069D1"},
            {"lassign", "", "#0069D1"},
            {"lindex", "", "#0069D1"},
            {"linsert", "", "#0069D1"},
            {"list", "", "#0069D1"},
            {"llength", "", "#0069D1"},
            {"load", "", "#EC5EB9"},
            {"lrange", "", "#0069D1"},
            {"lrepeat", "", "#0069D1"},
            {"lreplace", "", "#0069D1"},
            {"lreverse", "", "#0069D1"},
            {"lsearch", "", "#0069D1"},
            {"lset", "", "#0069D1"},
            {"lsort", "", "#0069D1"},
            {"mathfunc", "", "#0069D1"},
            {"mathop", "", "#0069D1"},
            {"memory", "", "#0069D1"},
            {"msgcat", "", "#0069D1"},
            {"namespace", "", "#0069D1"},
            {"open", "", "#0069D1"},
            {"package", "", "#0069D1"},
            {"parray", "", "#0069D1"},
            {"pid", "", "#0069D1"},
            {"pkg::create", "", "#0069D1"},
            {"pkg_mkIndex", "", "#0069D1"},
            {"platform", "", "#0069D1"},
            {"platform::shell", "", "#0069D1"},
            {"proc", "", "#0069D1"},
            {"puts", "", "#0069D1"},
            {"pwd", "", "#0069D1"},
            {"re_syntax", "", "#0069D1"},
            {"read", "", "#0069D1"},
            {"refchan", "", "#0069D1"},
            {"regexp", "", "#0069D1"},
            {"registry", "", "#0069D1"},
            {"regsub", "", "#0069D1"},
            {"rename", "", "#0069D1"},
            {"return", "", "#0069D1"},
            {"Safe Base", "", "#0069D1"},
            {"scan", "", "#0069D1"},
            {"seek", "", "#0069D1"},
            {"set", "", "#EC5EB9"},
            {"socket", "", "#0069D1"},
            {"source", "", "#0069D1"},
            {"split", "", "#0069D1"},
            {"string", "", "#0069D1"},
            {"subst", "", "#0069D1"},
            {"switch", "", "#0069D1"},
            {"Tcl", "", "#0069D1"},
            {"tcl_endOfWord", "", "#0069D1"},
            {"tcl_findLibrary", "", "#0069D1"},
            {"tcl_startOfNextWord", "", "#0069D1"},
            {"tcl_startOfPreviousWord", "", "#0069D1"},
            {"tcl_wordBreakAfter", "", "#0069D1"},
            {"tcl_wordBreakBefore", "", "#0069D1"},
            {"tcltest", "", "#0069D1"},
            {"tclvars", "", "#0069D1"},
            {"tell", "", "#0069D1"},
            {"time", "", "#0069D1"},
            {"tm", "", "#0069D1"},
            {"trace", "", "#0069D1"},
            {"unknown", "", "#0069D1"},
            {"unload", "", "#EC5EB9"},
            {"unset", "", "#EC5EB9"},
            {"update", "", "#0069D1"},
            {"uplevel", "", "#0069D1"},
            {"upvar", "", "#0069D1"},
            {"variable", "", "#0069D1"},
            {"vwait", "", "#0069D1"},
            {"while", "", "#EC5EB9"}
        };

        return syntax_tcl;
    }

    else if (fileExtension == "py")
    {
        QList<QStringList> syntax_py = {
            {"\'", "\'", "#F0A962"},
            {"\"", "\"", "#F0A962"},
            {"#", "\n", "#006400"},
            {"```", "```", "#006400"},
            {"and", "", "#0069D1"},
            {"as", "", "#0069D1"},
            {"assert", "", "#0069D1"},
            {"async", "", "#0069D1"},
            {"await", "", "#0069D1"},
            {"break", "", "#8A2BE2"},
            {"class", "", "#0069D1"},
            {"countinue", "", "#0069D1"},
            {"def", "", "#0069D1"},
            {"del", "", "#0069D1"},
            {"elif", "", "#0069D1"},
            {"else", "", "#0069D1"},
            {"except", "", "#0069D1"},
            {"False", "", "#0069D1"},
            {"finally", "", "#0069D1"},
            {"for", "", "#0069D1"},
            {"from", "", "#0069D1"},
            {"global", "", "#0069D1"},
            {"if", "", "#0069D1"},
            {"import", "", "#0069D1"},
            {"in", "", "#0069D1"},
            {"is", "", "#0069D1"},
            {"lambda", "", "#0069D1"},
            {"None", "", "#0069D1"},
            {"nonlocal", "", "#0069D1"},
            {"not", "", "#0069D1"},
            {"or", "", "#0069D1"},
            {"pass", "", "#0069D1"},
            {"raise", "", "#0069D1"},
            {"return", "", "#8A2BE2"},
            {"True", "", "#0069D1"},
            {"try", "", "#0069D1"},
            {"while", "", "#0069D1"},
            {"with", "", "#0069D1"},
            {"yield", "", "#0069D1"}
        };

        return syntax_py;
    }

    else if (fileExtension == "xml")
    {
        QList<QStringList> syntax_xml = {
            {"<", ">", "#59A5F9"},
            {"<", "/>", "#59A5F9"},
            {"</", ">", "#59A5F9"},
            {"\"", "\"", "#F0A962"}
        };

        return syntax_xml;
    }

    else
    {
        QList<QStringList> syntax_txt = {
            {"", "", "#ffffff"}
        };

        return syntax_txt;
    }
}
